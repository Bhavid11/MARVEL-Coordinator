#**Level 2**

### Task 3: Esp32 Cam
The microcontroller used here was ESP32 Cam-which is same as an ESP32 but with less number of pins and and a camera.
The code was difficult to understand.
We had to use an FTDA adapter to connect the Esp32 cam and the upload also was a hassle.
The working was pretty straight forward.

![](https://drive.google.com/uc?export=view&id=1oG4qxvM3BIGEdr8gK4zLn5slFihEqBp1)

*Fig. Hardware*
Code:
<script src="https://gist.github.com/Bhavid11/4cb99df3c06af7a00fd88aa3588866d8.js"></script>


*Video of Implementation*

<iframe width="560" height="315" src="https://www.youtube.com/embed/IGRiPtk2OOk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Skills acquired:**

- Working of ESP32 cam

#**Level 3**

### Task 1: Esp32 Webserver by switching on and off an LED
First, I rigged up the hardware circuit of the LED’s and then went about interfacing the esp32 with other components. The code of esp32 connecting to the web server performing the function was easy to understand. Found the interfacing of both the HTML website and the ESP32 functioning difficult.

![](https://drive.google.com/uc?export=view&id=1oYrBwJZ8JZ8u-4nsMI-WSA8xBo_sd7Pk)

*Fig. Hardware*
Code:
<script src="https://gist.github.com/Bhavid11/bf32e07d5b6ec7881f228606bf955315.js"></script>


*Video of Implementation*

<iframe width="560" height="315" src="https://www.youtube.com/embed/XRlwC3_NaRY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Skills acquired:**

- Interfacing HTML with Web Server and ESP32.

### Task 2: Flashing Morse Code
This was the most difficult task till now as I had to combine all the knowledge acquired to accomplish the task. So I first went about Morse code and defined its dictionary. Then I had to rig up the circuit for the same using LED’s and connected it to. Again the most challenging part was to set up the web server. Once that was done I had to make sure a user input is given and the Morse code is generated which was done using HTML Queries.

![](https://drive.google.com/uc?export=view&id=1pg9jE53I7fJRA-nhTAFehpG_Kq3qPZKJ)

*Fig. Hardware*
Code:
<script src="https://gist.github.com/Bhavid11/5ff285a819e3770744615e9c3a38a321.js"></script>


*Video of Implementation*

<iframe width="560" height="315" src="https://www.youtube.com/embed/_SYEW_x3XDE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Skills acquired:**

- Interfacing ESP32 with HTML

- Storing it in a text file and fetch it to flash 

- Using the Webserver to bind individual sub tasks for the functionality





### Task 3: Soil Moisture Sensor
This was my first time working with a sensor and ESP32. So I had just connect the sensor to ESP32 and had to set threshold values to indicate the condition of soil. A very easy task to implement.

![](https://drive.google.com/uc?export=view&id=1ovHlIdFKhmQ5Bdgu6aSBPk2C3yoL2_U-)

*Fig. Hardware*
Code:
<script src="https://gist.github.com/Bhavid11/5260b89c98df41e882b887841687a2b0.js"></script>

*Video of Implementation*

<iframe width="560" height="315" src="https://www.youtube.com/embed/yv7qK7K24LA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Skills acquired:**

- Working with ESP32 and sensor







### Task 4: Watering a Plant
This a direct continuation or add on feature to the previous task and had a perfect use case-(where we had to water the plant from the soil moisture values detected). We had to use a solenoid valve and a relay, both were a first time for me. Configuring how to use both off them were challenging to be honest as relays are affected easily and get damaged. The solenoid valve required a higher voltage to drive it so could not do the part to water the plant. The overall circuit excluding the valve where functioning perfectly as the relays turned on and off at the perfect time.

![](https://drive.google.com/uc?export=view&id=1pDqi2s7SSyV9hbitmNa3zJyjT2qT_ywt)

*Fig. Hardware*
Code:
<script src="https://gist.github.com/Bhavid11/b5260e3fb1f397781f982a2d8a4e6d04.js"></script>

*Video of Implementation*

<iframe width="560" height="315" src="https://www.youtube.com/embed/6W96R4F-o3I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Skills acquired:**

- Working of Relay and Solenoid Valve
How to decode Circuit errors and how to improve a circuit.






### Task 4: Read and Display Vitals
This task was a little different from others as I feel this had a potential to save lives. So as I started reading about the MAX30100 sensor, I had come to know that there are issues in the design of the sensor during fabrication itself. So we had to cut off the connection and give new onw with the help of solder. Then I had to learn the working of OLED and how it communicates and different functions related to display. After this with the help of libraries, I had to interface ESP32 and MAX30100 sensor and display the vitals on the OLED screen.

![](https://drive.google.com/uc?export=view&id=1oqks4c80H56mVmaihm7CiOrk7hJ9JKV-)

*Fig. Hardware*
Code:
<script src="https://gist.github.com/Bhavid11/adbb66f3fa698adafb7aa7a18b790488.js"></script>

*Video of Implementation*
<iframe width="560" height="315" src="https://www.youtube.com/embed/5GEcx8y4rxs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Skills acquired:**

- Working of MAX30100 and identifying flawed design

- Working with OLED Display


> **BHAVID A**

> *3RD YEAR ECE*





